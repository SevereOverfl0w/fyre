#!/bin/sh
#
# wildefyr & z3bra - 2016 (c) MIT
# make window fullscreen on optional screen

ARGS="$@"

usage() {
    cat >&2 << EOF
Usage: $(basename $0) <wid> <screen>
EOF

    test $# -eq 0 || exit $1
}

widCheck() {
    case "$1" in
        0x*)
            return 0
            ;;
        *)
            printf '%s\n' "Please enter a valid window id." >&2
            exit 1
            ;;
    esac
}

cleanFullscreen() {
    cleanWid=$1
    widCheck "$cleanWid"

    . fyrerc

    test -f "$FSFILE" && {
        grep -qw "$cleanWid" "$FSFILE" && {
            test ! -z "$fullWid" && {
                setborder active "$fullWid"
                wtp $(grep -w "$fullWid" "$FSFILE")
                printf '%s\n' "${fullWid} is no longer fullscreen."
            }

            buffer="$(grep -wv "$cleanWid" "$FSFILE")"
            test -z "$buffer" 2> /dev/null && {
                rm -f "$FSFILE"
            } || {
                printf '%s\n' "$buffer" > "$FSFILE"
            }

            exit 0
        }
    } || {
        exit 0
    }
}

main() {
    . fyrerc

    test ! -z "$2" && {
        retrieveScreenValues $2
        wattr "$1" && fullWid="$1" || fullWid="$PFW"
    } || {
        wattr "$1" && fullWid="$1" || {
            fullWid="$PFW"
            intCheck $1 && retrieveScreenValues $1
        }
    }

    test -f "$FSFILE" && cleanFullscreen "$fullWid"

    setborder none "$fullWid"
    wattr xywhi "$fullWid" >> "$FSFILE"
    wtp $SX $SY $SW $SH "$fullWid"

    printf '%s\n' "${fullWid} is now fullscreen."
}

for arg in $ARGS; do
    test "$CLEANFLAG" = "true" && cleanFullscreen "$arg" && exit 0

    case "$arg" in
        -c|--clean)       CLEANFLAG=true ;;
        -q|--quiet)       QUIETFLAG=true ;;
        -h|--help|h|help) usage 0        ;;
    esac
done

test "$QUIETFLAG" = "true" && {
    main $ARGS 2>&1 > /dev/null
} || {
    main $ARGS
}
