# mod1 = Alt_L
# mod2 = Alt_R
# mod3 = Hyper_L
# mod4 = Super_L

# reloading
mod1 + shift + e
    killall yawee.sh; wew | yawee.sh &!
mod1 + shift + r
    pkill -USR1 -x sxhkd

# shitty movement scripts
mod1 + {h,j,k,l}
    closest.sh {h,j,k,l}
mod1 + shift + {h,j,k,l}
    move.sh {left,down,up,right}
mod1 + Tab
    focus.sh next
mod1 + shift + Tab
    focus.sh prev

# manual window management
mod1 + {y,o,g,n,m}
    position.sh {tl,tr,md,bl,br} ${pfw}
mod1 + {q,w,e,r,a,s}
    position.sh {lft,mid,rht,full,res,ext} $(pfw)
mod4 + {h,j,k,l}
    wmv {-40 0,0 +40, 0 -40, +40 0} $(pfw)
mod4 + shift + {h,j,k,l}
    wmv {-10 0,0 +10, 0 -10, +10 0} $(pfw)

# resize window
mod4 + {a,s,w,d}
    wrs {-40 0,0 +40, 0 -40, +40 0} $(pfw)
mod4 + shift + {a,s,w,d}
    wrs {-10 0,0 +10, 0 -10, +10 0} $(pfw)

# automatic tiling for visible windows
mod1 + t
    tile.sh
mod1 + f
    fullscreen.sh $(pfw)

# window stacking order
mod1 + u
    chwso -l $(pfw); closest.sh h
mod1 + i
    chwso -l $(pfw); closest.sh l

# groups
mod1 + {1,2,3,4,5,6,7,8,9,0}
    wgroups.sh -t {1,2,3,4,5,6,7,8,9,0}
mod1 + shift + {1,2,3,4,5,6,7,8,9,0}
    wgroups.sh -s $(pfw) {1,2,3,4,5,6,7,8,9,0}
mod1 + c
    wgroups.sh -c $(pfw)
mod4 + c
    wgroups.sh -C

# programs
mod1 + Return
    urxvtc -geometry 89x24 -name 'Terminal'
mod2 + Return
    urxvt -geometry 89x24 -name 'urxvt'
mod1 + d
    dmenu-run
mod2 + z
    popup "$(wclass.sh c $(pfw))"
mod2 + x
    popup "$(wclass.sh m $(pfw))"
mod2 + v
    urxvt -name "alsamixer" -geometry 89x24 -e zsh -c "alsamixer"
mod2 + b
    urxvt -name "mosh" -geometry 89x24 -e zsh -c "con m"
mod2 + n
    urxvt -name "ncmpcpp" -geometry 89x24 -e zsh -c "ncmpcpp"
mod2 + m
    urxvt -name "mpsyt" -geometry 89x24 -e zsh -c "/builds/mps-youtube/mpsyt"

Print
    maim

# it's a killin' time!
mod1 + shift + q
    winkill.sh

# system
mod4 + e
    power l
mod4 + shift + {q,e,r}
    power {s,e,r}

# mouse
mod2 + q
    mouse.sh e
mod2 + w
    mouse.sh d
mod1 + !button{1,3}
    {wmv,wrs} -a %i %i $(pfw)
mod1 + !button2

# transset-df
mod4 + t
    trans.sh $(pfw) 0
mod4 + y
    trans.sh $(pfw) 0.75
mod4 + u
    trans.sh $(pfw) 0.05 dec
mod4 + i
    trans.sh $(pfw) 0.05 inc
mod4 + o
    trans.sh $(pfw) 1.0

# mpc
mod2 + p
    mpc toggle
mod2 + o
    mpc play
mod2 + i
    mpc stop
mod2 + l
    mpc next
mod2 + h
    mpc prev
mod2 + j
    mpc seek -5
mod2 + k
    mpc seek +5
mod2 + a
    mpc clear
mod2 + s
    mpc crop
mod2 + d
    mpc consume
mod2 + f
    mpc single
mod2 + g
    mpc random
mod2 + r
    mpc repeat

# volume
mod2 + 9
    mpc volume -5
mod2 + 0
    mpc volume +5
XF86AudioLowerVolume
    amixer -c 0 set Master 2db-
XF86AudioRaiseVolume
    amixer -c 0 set Master 2db+
XF86AudioMute
    amixer -c 0 set Master togglemute
